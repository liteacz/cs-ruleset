<?xml version="1.0"?>
<ruleset name="Litea default rulesets">
    <description>Litea coding standard.</description>

    <arg name="colors"/> <!-- Enable colors -->
    <arg value="p"/> <!-- Show progress bar -->
    <arg value="s"/> <!-- Zobrazit v reportu jmÃ©no Sniffu kterÃ½ reportoval chybu -->

    <rule ref="PSR1"/>

    <!-- ======================================================================================= -->
    <!-- Code sniffer default rules                                                              -->
    <!-- ======================================================================================= -->
    <rule ref="Generic.Files.LineEndings">
        <properties>
            <property name="eolChar" value="\n"/>
        </properties>
    </rule>

    <rule ref="Generic.WhiteSpace.ScopeIndent">
        <properties>
            <property name="indent" value="4" />
            <property name="tabIndent" value="false" />
        </properties>
    </rule>

    <rule ref="Generic.Arrays.ArrayIndent" />
    <rule ref="Generic.Arrays.DisallowLongArraySyntax" />

    <rule ref="Generic.CodeAnalysis.EmptyStatement">
        <!-- empty catch statements are allowed -->
        <exclude name="Generic.CodeAnalysis.EmptyStatement.DetectedCatch"/>
    </rule>

    <rule ref="Generic.Classes.DuplicateClassName" />
    <rule ref="Generic.CodeAnalysis.ForLoopShouldBeWhileLoop"/>
    <rule ref="Generic.CodeAnalysis.UnconditionalIfStatement"/>
    <rule ref="Generic.CodeAnalysis.UnnecessaryFinalModifier"/>
    <rule ref="Generic.ControlStructures.InlineControlStructure" />
    <rule ref="Generic.Files.InlineHTML"/>
    <rule ref="Generic.NamingConventions.ConstructorName"/>
    <rule ref="Generic.PHP.CharacterBeforePHPOpeningTag"/>
    <rule ref="Generic.PHP.DeprecatedFunctions"/>
    <rule ref="Generic.PHP.ForbiddenFunctions" />
    <rule ref="Generic.PHP.LowerCaseConstant"/>

    <!-- ======================================================================================= -->
    <!-- PEAR                                                                                    -->
    <!-- ======================================================================================= -->
    <rule ref="PEAR.Classes.ClassDeclaration"/>
    <rule ref="PEAR.Commenting.InlineComment"/>
    <rule ref="PEAR.ControlStructures.MultiLineCondition" />
    <rule ref="PEAR.Functions.FunctionDeclaration" />
    <rule ref="PEAR.WhiteSpace.ObjectOperatorIndent" />
    <rule ref="PEAR.WhiteSpace.ScopeClosingBrace" />

    <!-- ======================================================================================= -->
    <!-- Squiz                                                                                   -->
    <!-- ======================================================================================= -->
    <rule ref="Squiz.Arrays.ArrayBracketSpacing"/>
    <rule ref="Squiz.Classes.SelfMemberReference"/>

    <rule ref="Squiz.Commenting.DocCommentAlignment">
        <!-- space needed for indented annotations -->
        <exclude name="Squiz.Commenting.DocCommentAlignment.SpaceAfterStar"/>
    </rule>

    <rule ref="Squiz.ControlStructures.ForEachLoopDeclaration" />
    <rule ref="Squiz.ControlStructures.ForLoopDeclaration" />
    <rule ref="Squiz.Functions.FunctionDeclarationArgumentSpacing" />
    <rule ref="Squiz.Functions.FunctionDeclaration" />
    <rule ref="Squiz.Functions.GlobalFunction"/>
    <rule ref="Squiz.Operators.ValidLogicalOperators"/>
    <rule ref="Squiz.PHP.DiscouragedFunctions" />
    <rule ref="Squiz.PHP.GlobalKeyword"/>
    <rule ref="Squiz.PHP.Heredoc"/>
    <rule ref="Squiz.PHP.LowercasePHPFunctions"/>
    <rule ref="Squiz.PHP.NonExecutableCode"/>
    <rule ref="Squiz.Scope.StaticThisUsage"/>
    <rule ref="Squiz.Strings.DoubleQuoteUsage"/>
    <rule ref="Squiz.WhiteSpace.FunctionOpeningBraceSpace"/>

    <rule ref="Squiz.Strings.ConcatenationSpacing">
        <properties>
            <property name="spacing" value="1" />
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>

    <rule ref="Squiz.WhiteSpace.LanguageConstructSpacing"/>
    <rule ref="Squiz.WhiteSpace.LogicalOperatorSpacing"/>

    <rule ref="Squiz.WhiteSpace.ObjectOperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true" />
        </properties>
    </rule>

    <rule ref="Squiz.WhiteSpace.OperatorSpacing">
        <properties>
            <property name="ignoreNewlines" value="true"/>
        </properties>
    </rule>

    <rule ref="Squiz.WhiteSpace.SemicolonSpacing"/>
    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace" />

    <rule ref="Squiz.WhiteSpace.SuperfluousWhitespace.EmptyLines">
        <!-- turned off by PSR2 -> turning on with default severity -->
        <severity>5</severity>
    </rule>

    <!-- ======================================================================================= -->
    <!-- ADDITIONAL SLEVOMAT SNIFFS                                                              -->
    <!-- ======================================================================================= -->
    <config name="installed_paths" value="vendor/slevomat/coding-standard"/>

    <rule ref="SlevomatCodingStandard.TypeHints.DeclareStrictTypes">
        <properties>
            <property name="spacesCountAroundEqualsSign" value="0"/>
        </properties>
    </rule>

    <rule ref="SlevomatCodingStandard.Classes.DisallowMultiConstantDefinition" />

    <rule ref="SlevomatCodingStandard.Whitespaces.DuplicateSpaces">
        <properties>
            <property name="ignoreSpacesBeforeAssignment" value="false"/>
            <property name="ignoreSpacesInParameters" value="false"/>
        </properties>
    </rule>
</ruleset>
